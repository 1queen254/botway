# https://taskfile.dev

version: "3"

vars:
  BOTWAY_UNIX_PATH: /usr/local/bin
  BOTWAY_WINDOWS_PATH: ~\AppData\Local\botway\bin

tasks:
  default:
    cmds:
      - task: build

  bfs:
    cmds:
      - task: remove
      - task: build
      - task: install

  setup:
    cmds:
      - '{{if eq OS "windows"}}if (Test-Path "date.txt") { Remove-Item -Path date.txt -Recurse -Force }{{else}}if [ -f "date.txt" ]; then rm date.txt; fi{{end}}'
      - '{{if eq OS "windows"}}if (Test-Path "tag.txt") { Remove-Item -Path tag.txt -Recurse -Force }{{else}}if [ -f "tag.txt" ]; then rm tag.txt; fi{{end}}'
      - go run ./scripts/date.go >> date.txt
      - git describe --abbrev=0 --tags >> tag.txt

  remove:
    cmds:
      - '{{if eq OS "windows"}}Remove-Item -Path "{{ .BOTWAY_WINDOWS_PATH }}" -Recurse -Force{{else}}sudo rm -rf "{{ .BOTWAY_UNIX_PATH }}"/botway{{end}}'

  install:
    cmds:
      - '{{if eq OS "windows"}}Copy-Item -Path botway.exe -Destination "{{ .BOTWAY_WINDOWS_PATH }}" -Recurse -Force{{else}}sudo cp botway "{{ .BOTWAY_UNIX_PATH }}"{{end}}'

  release:
    cmds:
      - BuildDate="$(cat date.txt)" goreleaser release --rm-dist --timeout 100m

  build:
    cmds:
      - task: setup
      - go mod tidy
      - go build -ldflags "-X main.version=$(cat tag.txt) -X main.buildDate=$(cat date.txt)" -o botway{{exeExt}}

  docker:
    cmds:
      - '{{if eq OS "windows"}}.\docker\build.ps1{{else}}./docker/build.sh{{end}}'

  build-full-image:
    dir: ./docker
    cmds:
      - docker build -t botwayorg/botway:full --file full.dockerfile .
      - docker push botwayorg/botway:full

  remove-docker-images:
    cmds:
      - docker rmi $(docker images -a -q)

  upload-scoop-manifest:
    cmds:
      - '{{if eq OS "windows"}}if (Test-Path "botway.json") { Remove-Item -Path botway.json -Recurse -Force }{{else}}if [ -f "botway.json" ]; then rm botway.json; fi{{end}}'
      - cp '{{fromSlash "./dist/botway.json"}}' .
