# https://taskfile.dev

version: "3"

vars:
  BOTWAY_UNIX_PATH: /usr/local/bin
  BOTWAY_WINDOWS_PATH_GIT_BASH: ~/AppData/Local/botway/bin

tasks:
  default:
    cmds:
      - task: build

  bfs:
    cmds:
      - task: remove
      - task: build
      - task: install

  bfsw:
    cmds:
      - task: remove-win
      - task: build-win
      - task: install-win

  setup:
    cmds:
      - if [ -f "date.txt" ]; then rm date.txt; fi
      - if [ -f "tag.txt" ]; then rm tag.txt; fi
      - go run ./scripts/date.go >> date.txt
      - git describe --abbrev=0 --tags >> tag.txt

  remove:
    cmds:
      - sudo rm -rf "{{ .BOTWAY_UNIX_PATH }}"/botway

  remove-win:
    cmds:
      - rm -rf "{{ .BOTWAY_WINDOWS_PATH_GIT_BASH }}"/botway.exe

  install:
    cmds:
      - sudo mv botway "{{ .BOTWAY_UNIX_PATH }}"

  install-win:
    cmds:
      - mv botway.exe "{{ .BOTWAY_WINDOWS_PATH_GIT_BASH }}"

  release:
    cmds:
      - BuildDate="$(cat date.txt)" goreleaser release --rm-dist --timeout 100m

  build:
    cmds:
      - task: setup
      - go mod tidy
      - go build -ldflags "-X main.version=$(cat tag.txt) -X main.buildDate=$(cat date.txt)" -o botway

  build-win:
    cmds:
      - task: setup
      - go mod tidy
      - go build -ldflags "-X main.version=$(cat tag.txt) -X main.buildDate=$(cat date.txt)" -o botway.exe

  docker:
    cmds:
      - ./docker/build.sh

  build-full-image:
    dir: ./docker
    cmds:
      - docker build -t botwayorg/botway:full --file full.dockerfile .
      - docker push botwayorg/botway:full

  remove-docker-images:
    cmds:
      - docker rmi $(docker images -a -q)

  upload-scoop-manifest:
    cmds:
      - if [ -f "botway.json" ]; then rm botway.json; fi
      - cp ./dist/botway.json .
